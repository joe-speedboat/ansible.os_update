---
- name: Check for reboot hint
  shell: |
    MISSING_EXECUTEABLES_COUNT=`cat /proc/*/smaps | sed  '/\//!d;/\(deleted\)/!d;/ \/\[/d;/ \/SYSV/d;/ \/dev\/zero/d;s@.* /@/@' | sort -u | wc -l`
    INITRD_FILE=`cat /proc/cmdline | sed 's/BOOT_IMAGE=/\/boot\//;s/ .*//'`
    INITRD_MOD_EPOCH=`stat -c '%Y' $INITRD_FILE`
    LAST_REBOOT_EPOCH=`stat -c '%Y' /var/log/dmesg`
    if [ $MISSING_EXECUTEABLES_COUNT -gt 0 ] ; then 
      echo "WARNING: Some processes have missing files: system needs a reboot"
    fi
    if [ $INITRD_MOD_EPOCH -gt $LAST_REBOOT_EPOCH ] ; then
      echo "WARNING: New Kernel found: system needs a reboot"
    fi
    echo "DEBUG: MISSING_EXECUTEABLES_COUNT=$MISSING_EXECUTEABLES_COUNT INITRD_FILE=$INITRD_FILE INITRD_MOD_EPOCH=$INITRD_MOD_EPOCH LAST_REBOOT_EPOCH=$LAST_REBOOT_EPOCH"
  ignore_errors: true
  changed_when: false
  register: reboot_hint

- name: show cmd output
  debug: var=reboot_hint
  when: os_update_debug_vars

- name: reboot host if needed
  block:
  - name: reboot host 
    shell: sleep 5 ; reboot
    async: 10 # do not care for 10 sec (we left in 5 sec)
    poll: 0  # fire and forget

  - name: wait for host to finish reboot
    wait_for_connection:
      delay: 20  # do not check for at least xx sec

  - name: check if host has booted within last 300 sec
    shell: test $(cat /proc/uptime | cut -d. -f1) -lt 300
    changed_when: false
    register: reboot_check

  - name: alert if host has not been rebootet
    fail:
      msg: "{{ ansible_host }} has not booted, manual check needed"
    when: reboot_check.rc != 0
  when: >
    reboot_hint.stdout.find("reboot") != -1 or
    os_update_reboot == 'force'
  throttle: "{{ os_update_conc_reboot }}"
...
