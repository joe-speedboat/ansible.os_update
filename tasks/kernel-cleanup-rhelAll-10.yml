---
- name: make sure needed software is installed
  dnf: 
    name: yum-utils
- name: remove old kernel packages for RPM based systems
  shell: |
    # Number of newest kernels to keep
    # KEEP_KERNEL=${1:-2}
    KEEP_KERNEL="{{ os_update_keep_kernel_nr }}"

    # Get the list of all installed kernel packages
    kernel_packages=$(rpm -qa | grep -E '^kernel(-core|-modules|-modules-core)?-[0-9]')

    # Extract unique version numbers from the package list
    kernel_versions=$(echo "$kernel_packages" | sed -E 's/.*-([0-9]+\.[0-9]+\.[0-9]+).*/\1/' | sort -u)

    # Get the currently running kernel version
    current_kernel=$(uname -r | sed -E 's/([0-9]+\.[0-9]+\.[0-9]+).*/\1/')

    # Remove the current running kernel version from the list
    kernel_versions=$(echo "$kernel_versions" | grep -v "$current_kernel")

    # Sort the version numbers and keep the newest KEEP_KERNEL versions
    versions_to_remove=$(echo "$kernel_versions" | sort -V | head -n -${KEEP_KERNEL})

    # Convert versions back to package names
    packages_to_remove=""
    for version in $versions_to_remove; do
      packages_to_remove+=$(echo "$kernel_packages" | grep "$version")" "
    done

    # Remove the old kernels if any
    if [ -n "$packages_to_remove" ]; then
      echo "Removing the following kernel packages:"
      echo "$packages_to_remove"
      sudo dnf remove -y $packages_to_remove
    else
      echo "No old kernels to remove."
    fi
  register: cmd
  changed_when: "'Nothing to do' not in cmd.stdout"
...
